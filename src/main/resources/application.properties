#spring.datasource.driverClassName=org.postgresql.Driver
#DATABASE

spring.datasource.url=${URL_DATABASE}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}

spring.jpa.hibernate.ddl-auto=update

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect

spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI}

#API
analise.host=${ANALISE_HOST}
cartao.host=${CARTAO_HOST}

# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED}

# Jaeger - Nome do serviço
opentracing.jaeger.service-name=${APPLICATION_NAME}



# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT}



# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER}




#actuator
management.endpoint.health.show-details=always
management.endpoints.info.enabled=true
management.endpoints.prometheus.enabled=true
management.endpoints.web.exposure.include=health, info, prometheus



